#!/bin/bash

# Anonymize IPs from Apache logs
# ==============================
#
# This reads a line from STDIN, searches for IPv4 addresses,
# and replaces the last digit group with "0".

# If the script is passed a path as an argument, the resulting line
# will be appended to that path. Otherwise, the script will print
# the anonymized path to STDOUT.
#
# Example
# -------
#
# This call:
#
#     111.222.333.444 foolog
#
# ... will append this line to the file `foolog`:
#
#     111.222.333.0
#
# Usage in Apache config
# ----------------------
# 
# Make sure that `anonymize-ip` is in Apache's path or use an absolute path below:
#
#     ErrorLog     "|anonymize-ip /opt/www/mysite/log/error.log"
#     CustomLog    "|anonymize-ip /opt/www/mysite/log/access.log" combined
#
#

SUB_IPV4="s/\\b(([0-9]{1,3}\\.){3})[0-9]{1,3}\\b/\\10/g"
SUB_IPV6="s/\\b(([A-Fa-f0-9]{0,4}\\:){3,})[A-Fa-f0-9]{0,4}/X\\2X/g"
# SUB_IPV6="s/\\b([A-Fa-f0-9]{0,4})(\\:[A-Fa-f0-9]{0,4}){3,}/X\\2X/g"

read input
anonymized=$(echo $input | /bin/sed -r $SUB_IPV4 | /bin/sed -r $SUB_IPV6)

if [ -z "$1" ]
  then echo $anonymized
  else echo $anonymized >> $1
fi

